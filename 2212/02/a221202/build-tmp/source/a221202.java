/* autogenerated by Processing revision 1289 on 2022-12-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class a221202 extends PApplet {

int fps = 60;
boolean gen = false;
int dim = 1000; //screensize
//vars----------------
int stepAmount;
int currentStep;
int startEndSizeDiff;
int totalSteps;

//modifiers-----------
int finalSize = 50;
int startSize = 750;
int inSteps = 5;
int outSteps = 5;


int backgroundColor = color(0, 0, 0);
int lineColor = color(255, 255, 255);
int lineAlpha = 100;
int lineStrokeWeight = 2;

public void setup() {
  /* size commented out by preprocessor */; //dim
  frameRate(fps);
  /* smooth commented out by preprocessor */;
  background(backgroundColor);
  //setup--------------
  startEndSizeDiff = startSize - finalSize;
  totalSteps = inSteps + outSteps;
  stepAmount = startEndSizeDiff / totalSteps;

}

public void draw() {
  //draw----------------
  stroke(lineColor, lineAlpha);
  strokeWeight(lineStrokeWeight);
  noFill();

  ellipse(dim/2, dim/2, startSize, startSize);


  if (gen) {
    gen = false;
    saveTheFrame();
  }
}

public void keyPressed() {
  if (key == 'g' || key == 'G') {
    gen = true;
  }
}

public void saveTheFrame() {
  String path = sketchPath();
  File f = new File(path+"/render");
  int ind = 0;
  if (f.list() != null) {
    ind = f.list().length;
  }
  String fileName = "render/out"+Integer.toString(ind)+".png";
  saveFrame(fileName);
  println("Saved to " + fileName);
}


  public void settings() { size(1000, 1000, P3D);
smooth(8); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "a221202" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
