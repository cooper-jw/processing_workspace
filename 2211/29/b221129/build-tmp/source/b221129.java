/* autogenerated by Processing revision 1289 on 2022-11-30 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class b221129 extends PApplet {

int fps = 240;
boolean gen = false;
int dim = 1000; //screensize
float dimUsablePerc = 0.5f;
//vars----------------
float a, b, c, d;
float gs = 3.5f;
float gx = 0.5f;
float gy = 0.75f;
int fadebg;
int exposures;
int maxage = 128;  

int num = 0;
int maxnum = 4000;
TravelerHenon[] travelers = new TravelerHenon[maxnum];

// frame counter for animation
float time;

public void setup() {
  /* size commented out by preprocessor */; //dim
  frameRate(fps);
  /* smooth commented out by preprocessor */;
  background(0);
  rectMode(CORNER);
  noStroke();

  // bourke constants
  a = 2.01f;
  b = -2.53f;
  c = 1.61f;
  d = -0.33f;
  
  // make some travelers
  for (int i=0;i<maxnum;i++) {
    travelers[i] = new TravelerHenon();
    num++;
  } 
}

public void draw() {
  //draw----------------
  for (int i=0;i<num;i++) {
    travelers[i].draw();
  }
  exposures+=num;
  //casing();

  if (gen) {
    gen = false;
    saveTheFrame();
    println("SAVE");
  }
}

float casingPercent = 0.03f;
private void casing() {
  fill(0.5f,0.8f,0.0f);
  stroke(0.5f,0.8f,0.0f);
  rect(0.0f, 0.0f, width * casingPercent, height);
  rect(0.0f, 0.0f, width, height * casingPercent);
  rect(width - (width * casingPercent), 0.0f, width, height);
  rect(0.0f, height - (height * casingPercent), width, height);
  noStroke();
  noFill();
}

public void keyPressed() {
  if (key == 'g') {
    gen = true;
  }
}

public void mousePressed() {
  // reset the image  
  reset();
}

public void reset() {
  background(0);
  exposures = 0;
  gs = 3.0f;
  gx = 0.5f;
  gy = 0.5f;
  a = random(-2.5f,2.5f);
  b = random(-2.5f,2.5f);
  c = random(-2.5f,2.5f);
  d = random(-2.5f,2.5f);
  
  for (int i=0;i<num;i++) {
    travelers[i].rebirth();
  }

}

public void saveTheFrame() {
  String path = sketchPath();
  File f = new File(path+"/render");
  int ind = 0;
  if (f.list() != null) {
    ind = f.list().length;
  }
  saveFrame("render/out"+Integer.toString(ind)+".png");
}


class TravelerHenon {
  float x, y;
  float xn, yn;

  int age = 0;
  
  TravelerHenon() {
    // constructor
    x = random(-1.0f,1.0f);
    y = random(-1.0f,1.0f);
  }
  
  public void draw() {
      // move through time
      xn = sin(a*y) - cos(b*x);
      yn = sin(c*x) - cos(d*y);
      
      float d = sqrt((xn-x)*(xn-x) + (yn-y)*(yn-y));
      x = xn;
      y = yn;
      
      // render single transparent pixel
      stroke(255,5);
      point((x/gs+gx)*dim,(y/gs+gy)*dim);
      //point(((x/gs+gx)*dim)-((dim*dimUsablePerc)/2),((y/gs+gy)*dim)-((dim*dimUsablePerc)/2));

      // age
      age++;
      if (age>maxage) {
        // begin anew
        rebirth();
      }
        
  }  
  
  public void rebirth() {
    x = random(0.0f,1.0f);
    y = random(-1.0f,1.0f);
    age = 0;
  }    
 
}    


  public void settings() { size(1000, 1000, P3D);
smooth(16); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "b221129" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
